specVersion: 0.0.2
description: Compound is an open-source protocol for algorithmic, efficient Money Markets on the Ethereum blockchain.
repository: https://github.com/graphprotocol/compound-V2-subgraph
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: Comptroller
    network: 'Milkomeda C1 Devnet'
    source:
      address: '0x1063cD9f7093b3DDa604480aE0310EB9C83913b0'
      abi: Comptroller
      startBlock: 10506106
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/comptroller.ts
      entities:
        - Comptroller
        - Market
      abis:
        - name: Comptroller
          file: ./abis/comptroller.json
        - name: PriceOracle
          file: ./abis/priceOracle.json
      eventHandlers:
        - event: MarketEntered(address,address)
          handler: handleMarketEntered
        - event: MarketExited(address,address)
          handler: handleMarketExited
        - event: NewCloseFactor(uint256,uint256)
          handler: handleNewCloseFactor
        - event: NewCollateralFactor(address,uint256,uint256)
          handler: handleNewCollateralFactor
        - event: NewLiquidationIncentive(uint256,uint256)
          handler: handleNewLiquidationIncentive
        - event: NewPriceOracle(address,address)
          handler: handleNewPriceOracle
  - kind: ethereum/contract
    name: xMADA
    network: 'Milkomeda C1 Devnet'
    source:
      address: '0xA8E43774EaC1c45F70DC34d9fFE66d34eD1d4234'
      abi: XToken
      startBlock: 10591127
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/xtoken.ts
      entities:
        - User
        - Market
        - XTokenInfo
      abis:
        - name: XToken
          file: ./abis/xtoken.json
        - name: PriceOracle
          file: ./abis/priceOracle.json
        - name: PriceOracle2
          file: ./abis/priceOracle2.json
        - name: XErc20
          file: ./abis/xERC20.json
        - name: ERC20
          file: ./abis/erc20.json
      eventHandlers:
        - event: Mint(address,uint256,uint256)
          handler: handleMint
        - event: Redeem(address,uint256,uint256)
          handler: handleRedeem
        - event: Borrow(address,uint256,uint256,uint256)
          handler: handleBorrow
        - event: RepayBorrow(address,address,uint256,uint256,uint256)
          handler: handleRepayBorrow
        - event: LiquidateBorrow(address,address,uint256,address,uint256)
          handler: handleLiquidateBorrow
        - event: AccrueInterest(uint256,uint256,uint256,uint256)
          handler: handleAccrueInterest
        - event: NewReserveFactor(uint256,uint256)
          handler: handleNewReserveFactor
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: NewMarketInterestRateModel(address,address)
          handler: handleNewMarketInterestRateModel
  - kind: ethereum/contract
    name: xUSDC
    network: 'Milkomeda C1 Devnet'
    source:
      address: '0x3C6702e19618Be3a279762EAb6cB5701CfBd6C11'
      abi: XToken
      startBlock: 10506357
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/xtoken.ts
      entities:
        - Comptroller
        - User
        - Market
        - XTokenInfo
      abis:
        - name: XToken
          file: ./abis/xtoken.json
        - name: PriceOracle
          file: ./abis/priceOracle.json
        - name: PriceOracle2
          file: ./abis/priceOracle2.json
        - name: ERC20
          file: ./abis/erc20.json
        - name: XErc20
          file: ./abis/xERC20.json
      eventHandlers:
        - event: Mint(address,uint256,uint256)
          handler: handleMint
        - event: Redeem(address,uint256,uint256)
          handler: handleRedeem
        - event: Borrow(address,uint256,uint256,uint256)
          handler: handleBorrow
        - event: RepayBorrow(address,address,uint256,uint256,uint256)
          handler: handleRepayBorrow
        - event: LiquidateBorrow(address,address,uint256,address,uint256)
          handler: handleLiquidateBorrow
        - event: AccrueInterest(uint256,uint256,uint256,uint256)
          handler: handleAccrueInterest
        - event: NewReserveFactor(uint256,uint256)
          handler: handleNewReserveFactor
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: NewMarketInterestRateModel(address,address)
          handler: handleNewMarketInterestRateModel
